{"version":3,"sources":["components/Employee.js","components/EmployeesList.js","components/SelectedEmployees.js","App.js","index.js","customComparator.js"],"names":["Employee","props","data","lastName","firstName","EmployeesList","ALFABET","customComparator","map","arr","i","className","length","obj","j","id","type","defaultChecked","checked","onChange","handler","SelectedEmployyes","MONTHS","MONTHNUM","getCheckedUsers","checkeduser","forEach","user","mob","Date","dob","getMonth","push","userList","filterCondition","sorterCondition","getSortChecked","usr","date","toLocaleDateString","day","month","year","App","useState","userdata","setData","useEffect","sessionStorage","getItem","fetch","then","response","json","result","setItem","JSON","stringify","catch","e","console","error","restore","parse","userChecked","target","parentElement","SelectedEmployees","ReactDOM","render","StrictMode","document","getElementById","dataArray","arrayToCompare","filter","Array","isArray","filtered","compareElement","current","eval","sorted","sort","a","b"],"mappings":"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","file":"static/js/main.d4f24bf7.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Employee(props) {\n  return (\n    <span>\n      {props.data.lastName}&nbsp;{props.data.firstName}\n    </span>\n  );\n}\n","import React from \"react\";\nimport customComparator from \"../customComparator\";\nimport Employee from \"./Employee\";\n\nfunction EmployeesList(props) {\n  const ALFABET = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n\n    function getSort() {\n    const filterCondition = 'current.lastName.charAt(0) === compareElement';\n    const sorterCondition = 'a.lastName.localeCompare(b.lastName)';\n    return customComparator(\n      props.data,\n      ALFABET,\n      filterCondition,\n      sorterCondition\n    );\n  }\n\n  return getSort().map((arr, i) => {\n    return (\n      <div className=\"list_submassive\" key={i}>\n        <h3 className=\"litera_header\"> {ALFABET[i]} </h3>\n        {arr.length === 0\n          ? \"-----\"\n          : arr.map((obj, j) => {\n              return (\n                <li key={j} id={obj.id}>\n                  <Employee data={obj} />\n                  <input\n                    type=\"checkbox\"\n                    defaultChecked={obj.checked}\n                    onChange={props.handler}\n                  />\n                </li>\n              );\n            })}\n      </div>\n    );\n  });\n}\n\nexport default EmployeesList;\n","import React from \"react\";\nimport customComparator from \"../customComparator\";\nimport Employee from \"./Employee\";\n\nfunction SelectedEmployyes(props) {\n  const MONTHS = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n  const MONTHNUM = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n\n  const getCheckedUsers = () => {\n    let checkeduser = [];\n    const users = props.data ? props.data : [];\n    users.forEach((user) => {\n      if (user.checked) {\n        user.mob = new Date(user.dob).getMonth();\n        checkeduser.push(user);\n      }\n    });\n    return getSortChecked(checkeduser);\n  };\n\n  function getSortChecked(userList) {\n    const filterCondition =\n      \"new Date (current.dob).getMonth() === compareElement\";\n    const sorterCondition =\n      \"new Date (a.dob).getDate() > new Date (b.dob).getDate() ? 1 : -1\";\n    return customComparator(\n      userList,\n      MONTHNUM,\n      filterCondition,\n      sorterCondition\n    );\n  }\n\n  const formatDate = (date) => {\n    return new Date(date).toLocaleDateString(\"en-GB\", {\n      day: \"numeric\",\n      month: \"short\",\n      year: \"numeric\",\n    });\n  };\n\n  return getCheckedUsers().length === 0 ? (\n    <div className=\"selected_submassive\">No selected employees</div>\n  ) : (\n    getCheckedUsers().map((arr, i) => {\n      return arr.length === 0 ? null : (\n        <div className=\"selected_submassive\" key={i}>\n          <h3 className=\"month_header\"> {MONTHS[i]} </h3>\n          {arr.map((usr, j) => {\n            return (\n              <li key={j} id={usr.id}>\n                <Employee data={usr} />  -  {formatDate(usr.dob)}\n              </li>\n            );\n          })}\n        </div>\n      );\n    })\n  );\n}\n\nexport default SelectedEmployyes;\n","import React, { useState, useEffect } from \"react\";\nimport EmployeesList from \"./components/EmployeesList\";\nimport SelectedEmployees from \"./components/SelectedEmployees\";\n\nfunction App() {\n  const [userdata, setData] = useState(null);\n\n  useEffect(() => {\n    if (sessionStorage.getItem(\"userdata\") === null) {\n      fetch(`https://yalantis-react-school-api.yalantis.com/api/task0/users`)\n        .then((response) => response.json())\n        .then((result) => {\n          sessionStorage.setItem('userdata', JSON.stringify(result));\n          setData(result);\n        })\n        .catch((e) => console.error(e));\n    } else {\n      const restore = sessionStorage.getItem('userdata');\n      setData(JSON.parse(restore));\n    }\n  }, []);\n\n  function handleChange(e) {\n    let userChecked = [];\n    for (let i = 0; i < userdata.length; i++) {\n      if (userdata[i].id === e.target.parentElement.id) {\n        userChecked = userdata[i];\n      }\n    }\n    userChecked.checked = e.target.checked;\n    setData([...userdata]);\n    sessionStorage.setItem('userdata', JSON.stringify(userdata));\n  }\n\n  return (\n    <div className=\"page_parent_component\">\n      <div className=\"employees_list_component\">\n        <h2>Employees </h2>\n        <ul className=\"employees_ul\">\n          {userdata ? (\n            <EmployeesList data={userdata} handler={handleChange} />\n          ) : (\n            \"loading...\"\n          )}\n        </ul>\n      </div>\n      <div className=\"selected_employees_component\">\n        <h2 className=\"selected_employees_header\">Employees birthday</h2>\n        <ul className=\"selected_list\">\n          <SelectedEmployees data={userdata} />\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","export default function customComparator(\n  dataArray,\n  arrayToCompare,\n  filterCondition,\n  sorterCondition\n) {\n  function filter() {\n    if (\n      dataArray.length === 0 ||\n      arrayToCompare === 0 ||\n      !Array.isArray(dataArray) ||\n      !Array.isArray(arrayToCompare) ||\n      typeof filterCondition !== \"string\" ||\n      typeof sorterCondition !== \"string\" ||\n      filterCondition === \"\" ||\n      sorterCondition === \"\"\n    )\n      return [];\n    let filtered = [];\n    arrayToCompare.forEach((compareElement) => {\n      filtered.push(\n        dataArray.filter((current) =>\n          // eslint-disable-next-line no-eval\n          eval(filterCondition)\n        )\n      );\n    });\n    return filtered;\n  }\n\n  function sorted() {\n    let sorted = filter();\n    sorted.forEach((current) => {\n      current.sort((a, b) => {\n        // eslint-disable-next-line no-eval\n        return eval(sorterCondition);\n      });\n    });\n    return sorted;\n  }\n\n  return sorted();\n}\n"],"sourceRoot":""}